environment:
  my_version_number: 1.0.0
  application_name: CppCompiler
  project_name: CppCompiler

version: $(my_version_number).{build}

skip_tags: true

configuration: Release

before_build:
#  - 'curl -H "Authorization: token %download_token%" -H "Accept: application/vnd.github.v3.raw" -O -L "%download_link%/developer-certificate.pfx"'
  - del CppCompiler.sln
  - ps: nuget restore -Verbosity quiet

build:
  verbosity: minimal

for:
  - branches:
      only:
        - master

    dotnet_csproj:
      patch: true
      file: '**\*.csproj'
      version: '$(my_version_number)'
      package_version: '$(my_version_number)'
      assembly_version: '$(my_version_number)'
      file_version: '$(my_version_number)'
      informational_version: '$(my_version_number)'

    after_test:
      - ps: dotnet publish "-p:PublishProfile=$($env:project_name).csproj" -c:Release -o:publish -v:m -r:win-x64 --self-contained:true -p:PublishSingleFile=true -p:PublishTrimmed=true

    artifacts:
      - path: /publish/$(application_name).exe
        name: exe

    deploy:
      - provider: GitHub
        release: $(my_version_number)
        auth_token: # encrypted token:
          secure: HESVuhwKdUbPpbBsQrWslB7GYNy5r03/MN/enpu7UWbY886bOE+EpbEFwAVMrtLO #REPLACE WITH TOKEN
        artifact: exe
        draft: false
        prerelease: false
        force_update: false
        on:
          branch: master